# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Compile Dispatcher
        run: mvn -pl dispatcher compile
      - name: Run Dispatcher unit tests
        run: mvn -pl dispatcher test
      - name: Package Dispatcher
        run: mvn -pl dispatcher package -DskipTests
      - name: Build Dispatcher Docker image
        run: mvn -pl dispatcher docker:build
      - name: Compile Tsukuyomi
        run: mvn -pl statefun-tsukuyomi compile
      - name: Run Tsukuyomi unit tests
        run: mvn -pl statefun-tsukuyomi test
      - name: Run Tsukuyomi integration tests
        run: mvn -P integration -pl statefun-tsukuyomi test
      - name: Prepare Docker properties
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/statefun-tsukuyomi-dispatcher
          VERSION=$(mvn exec:exec -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive -q)
          TAG=${DOCKER_IMAGE}:${VERSION}
          echo ::set-output name=tag::${TAG}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push Dispatcher Docker image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./dispatcher/
          file: ./dispatcher/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tag }}
